{"version":3,"sources":["scoreboardView/ScoreCount.js","scoreboardView/Scoreboard.js","gameView/GameHands.js","gameView/GameResults.js","gameView/GameActive.js","gameView/GameDashboard.js","Rules.js","App.js","index.js"],"names":["StyledScoreCount","styled","div","ScoreCount","score","useContext","ScoreContext","StyledScoreboard","Scoreboard","src","alt","StyledGameHands","props","base","border","GameHands","handOptions","onClick","id","name","StyledMessage","GameResults","gameResults","StyledGameboardActive","GameActive","userHand","computerHand","restartGame","handleClick","className","StyledGameboardWrapper","StyledGameboardWaiting","losesTo","GameBoard","useState","activeGame","setActiveGame","setUserHand","setComputerHand","setGameResults","setScore","userChoice","choice","chosenHand","find","c","randomHand","Math","floor","random","length","includes","StyledRules","StyledDiagram","Rules","showRules","setShowRules","StyledApp","StyledWrapper","createContext","App","Provider","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a1f6abc.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ScoreContext } from \"../App\";\n\nconst StyledScoreCount = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: white;\n\tcolor: hsl(229, 25%, 31%);\n\tpadding: 0.25rem 1rem;\n\tmargin: 0.25rem 0.75rem;\n\tborder-radius: 0.25rem;\n\th3 {\n\t\tfont-size: 0.75rem;\n\t\tfont-weight: 700;\n\t\tmargin: 0rem;\n\t\tcolor: hsl(229, 64%, 46%);\n\t}\n\tp {\n\t\tmargin: 0;\n\t\tfont-size: 2rem;\n\t\tcolor: hsl(229, 25%, 31%);\n\t}\n`;\nexport default function ScoreCount() {\n\tconst { score } = useContext(ScoreContext);\n\treturn (\n\t\t<StyledScoreCount>\n\t\t\t<h3>Score</h3>\n\t\t\t<p>{score}</p>\n\t\t</StyledScoreCount>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScoreCount from \"./ScoreCount\";\n\nconst StyledScoreboard = styled.div`\n\tmin-height: 10vh;\n\twidth: 100%;\n\tmax-width: 650px;\n\tmargin: 2rem 0rem auto;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tborder: 2px solid hsl(217, 16%, 45%);\n\tborder-radius: 0.5rem;\n\tcolor: white;\n\n\timg {\n\t\twidth: 3rem;\n\t\tpadding: 1rem;\n\t}\n`;\n\nexport default function Scoreboard() {\n\treturn (\n\t\t<StyledScoreboard>\n\t\t\t<img\n\t\t\t\tsrc='./images/logo-bonus.svg'\n\t\t\t\talt='Rock Paper Scissors Lizard Spock Logo'\n\t\t\t/>\n\t\t\t<ScoreCount />\n\t\t</StyledScoreboard>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledGameHands = styled.div`\n\tmargin: 0 auto;\n\tbackground-color: white;\n\tborder: 10px solid ${(props) => props.base};\n\tborder-radius: 50%;\n\tbox-shadow: 0 5px 0 ${(props) => props.border};\n\theight: 80px;\n\twidth: 80px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\timg {\n\t\twidth: 60%;\n\t}\n\t&:active {\n\t\ttransform: scale(0.9);\n\t}\n`;\n\nexport default function GameHands({ handOptions, onClick }) {\n\tconst { id, name, base, border } = handOptions;\n\n\tfunction handleClick() {\n\t\tonClick(id);\n\t}\n\n\treturn (\n\t\t<StyledGameHands base={base} border={border} onClick={handleClick}>\n\t\t\t<img src={`./images/icon-${name}.svg`} alt={`${name} Hand`} />\n\t\t</StyledGameHands>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledMessage = styled.div`\n\tp {\n\t\tfont-size: 2rem;\n\t\tcolor: white;\n\t\tfont-weight: 700;\n\t\ttext-transform: uppercase;\n\t}\n\tbutton {\n\t\toutline: none;\n\t\tcolor: hsl(217, 16%, 45%);\n\t\tcursor: pointer;\n\t\tcolor: hsl(229, 25%, 31%);\n\t\tbackground-color: white;\n\t\tborder: none;\n\t\tborder-radius: 0.5rem;\n\t\tfont-size: 0.75rem;\n\t\tpadding: 1rem 2rem;\n\t\ttext-transform: uppercase;\n\t}\n\n\t@media only screen and (min-width: 600px) {\n\t\tp {\n\t\t\tfont-size: 2rem;\n\t\t}\n\t\tbutton {\n\t\t\tpadding: 1rem 3rem;\n\t\t}\n\t}\n`;\n\nexport default function GameResults({ gameResults, onClick }) {\n\tfunction handleClick() {\n\t\tonClick();\n\t}\n\n\treturn (\n\t\t<StyledMessage>\n\t\t\t<p>You {gameResults} !</p>\n\t\t\t<button onClick={handleClick}>Play Again</button>\n\t\t</StyledMessage>\n\t);\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GameHands from \"./GameHands\";\nimport GameResults from \"./GameResults\";\n\nconst StyledGameboardActive = styled.div`\n\ttext-align: center;\n\n\t.hands {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr;\n\t\tgrid-template-areas:\n\t\t\t\"a b\"\n\t\t\t\"c c\";\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\t.hand-active {\n\t\tpadding: 2rem;\n\t\talign-self: center;\n\t\tmargin: 0 auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tp {\n\t\t\tfont-size: 1.5rem;\n\t\t\tcolor: white;\n\t\t\tfont-weight: 700;\n\t\t}\n\t}\n\t.user {\n\t\tgrid-area: a;\n\t}\n\t.computer {\n\t\tgrid-area: b;\n\t}\n\t.results {\n\t\tgrid-area: c;\n\t\tgrid-column: 1 / 3;\n\t}\n\n\t@media only screen and (min-width: 600px) {\n\t\t.hands {\n\t\t\tgrid-template-columns: 1fr 1fr 1fr;\n\t\t\tgrid-template-areas: \"a c b\";\n\t\t}\n\t\t.hand-active {\n\t\t\tflex-direction: column-reverse;\n\t\t\tp {\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tcolor: white;\n\t\t\t\tfont-weight: 700;\n\t\t\t}\n\t\t\t& div {\n\t\t\t\theight: 150px;\n\t\t\t\twidth: 150px;\n\t\t\t}\n\t\t}\n\t\t.results {\n\t\t\tgrid-column: auto;\n\t\t}\n\t}\n`;\n\nexport default function GameActive({\n\tuserHand,\n\tcomputerHand,\n\trestartGame,\n\tgameResults,\n}) {\n\tfunction handleClick() {\n\t\trestartGame();\n\t}\n\treturn (\n\t\t<StyledGameboardActive className='active-board'>\n\t\t\t<div className='hands'>\n\t\t\t\t<div className='hand-active user'>\n\t\t\t\t\t<GameHands handOptions={userHand} onClick={handleClick} />\n\t\t\t\t\t<p>YOU PICKED</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='hand-active computer'>\n\t\t\t\t\t<GameHands handOptions={computerHand} onClick={handleClick} />\n\t\t\t\t\t<p>THE HOUSE PICKED</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='results'>\n\t\t\t\t\t<GameResults gameResults={gameResults} onClick={handleClick} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</StyledGameboardActive>\n\t);\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport GameHands from \"./GameHands\";\nimport GameActive from \"./GameActive\";\nimport { ScoreContext } from \"../App\";\n\nconst StyledGameboardWrapper = styled.div`\n\tmin-height: 70vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst StyledGameboardWaiting = styled.div`\n\theight: 100%;\n\tbackground-image: url(\"./images/bg-pentagon.svg\");\n\tbackground-size: contain;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\twidth: 300px;\n\tmargin: 0 auto;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(6, 0.75rem);\n\tgrid-template-rows: 6rem 7rem 9rem;\n\tjustify-content: center;\n\talign-content: center;\n\tjustify-items: center;\n\talign-items: center;\n\tgrid-gap: 1rem 1.75rem;\n\n\t& div:first-child {\n\t\tgrid-column: span 7;\n\t}\n\t& div:nth-child(2) {\n\t\tgrid-column: 1 / 2;\n\t}\n\t& div:nth-child(3) {\n\t\tgrid-column: 7 / 8;\n\t}\n\t& div:nth-child(4) {\n\t\tgrid-column: 2 / 3;\n\t}\n\t& div:nth-child(5) {\n\t\tgrid-column: 6 / 7;\n\t}\n`;\n\nconst handOptions = [\n\t{\n\t\tid: 1,\n\t\tname: \"scissors\",\n\t\tbase: \"#eca81e\",\n\t\tborder: \"#c76c14\",\n\t\tlosesTo: [5, 2],\n\t},\n\t{ id: 2, name: \"spock\", base: \"#40b9ce\", border: \"#52bed1\", losesTo: [3, 4] },\n\t{ id: 3, name: \"paper\", base: \"#516ef4\", border: \"#2543c3\", losesTo: [1, 4] },\n\t{\n\t\tid: 4,\n\t\tname: \"lizard\",\n\t\tbase: \"#ec9e0e\",\n\t\tborder: \"#eca922\",\n\t\tlosesTo: [5, 1],\n\t},\n\t{ id: 5, name: \"rock\", base: \"#de3a5a\", border: \"#980e31\", losesTo: [3, 2] },\n];\n\nexport default function GameBoard() {\n\tconst [activeGame, setActiveGame] = useState(false);\n\tconst [userHand, setUserHand] = useState(null);\n\tconst [computerHand, setComputerHand] = useState(null);\n\tconst [gameResults, setGameResults] = useState(null);\n\tconst { score, setScore } = useContext(ScoreContext);\n\n\tfunction restartGame() {\n\t\tsetActiveGame(false);\n\t\tsetUserHand(null);\n\t\tsetComputerHand(null);\n\t}\n\n\tfunction userChoice(choice) {\n\t\tsetActiveGame(true);\n\n\t\tconst chosenHand = handOptions.find((c) => c.id === choice);\n\t\tconst randomHand =\n\t\t\thandOptions[Math.floor(Math.random() * handOptions.length)];\n\n\t\tsetUserHand(chosenHand);\n\t\tsetComputerHand(randomHand);\n\n\t\t//game logic to decide winner\n\t\tif (chosenHand.losesTo.includes(randomHand.id)) {\n\t\t\tsetGameResults(\"lose\");\n\t\t\tsetScore(0);\n\t\t} else if (randomHand.losesTo.includes(chosenHand.id)) {\n\t\t\tsetGameResults(\"win\");\n\t\t\tsetScore((score) => score + 1);\n\t\t} else if (chosenHand.id === randomHand.id) {\n\t\t\tsetGameResults(\"draw\");\n\t\t}\n\t}\n\n\treturn (\n\t\t<StyledGameboardWrapper className='gameboard'>\n\t\t\t{!activeGame ? (\n\t\t\t\t<StyledGameboardWaiting className='waiting-board'>\n\t\t\t\t\t<GameHands handOptions={handOptions[0]} onClick={userChoice} />\n\t\t\t\t\t<GameHands handOptions={handOptions[1]} onClick={userChoice} />\n\t\t\t\t\t<GameHands handOptions={handOptions[2]} onClick={userChoice} />\n\t\t\t\t\t<GameHands handOptions={handOptions[3]} onClick={userChoice} />\n\t\t\t\t\t<GameHands handOptions={handOptions[4]} onClick={userChoice} />\n\t\t\t\t</StyledGameboardWaiting>\n\t\t\t) : (\n\t\t\t\t<GameActive\n\t\t\t\t\tuserHand={userHand}\n\t\t\t\t\tcomputerHand={computerHand}\n\t\t\t\t\trestartGame={restartGame}\n\t\t\t\t\tactiveGame={activeGame}\n\t\t\t\t\tgameResults={gameResults}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</StyledGameboardWrapper>\n\t);\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledRules = styled.div`\n\tmin-height: 10vh;\n\ttext-align: center;\n\tbutton {\n\t\tcursor: pointer;\n\t\toutline: none;\n\t\tcolor: white;\n\t\tbackground-color: transparent;\n\t\tpadding: 0.75rem 2rem;\n\t\tborder: 2px solid hsl(217, 16%, 45%);\n\t\tborder-radius: 0.5rem;\n\t}\n\n\t@media only screen and (min-width: 600px) {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-content: flex-end;\n\t\tbutton {\n\t\t\tpadding: 0.25rem 1.5rem;\n\t\t\tmargin: 0 2rem 1.25rem 0;\n\t\t}\n\t}\n`;\n\nconst StyledDiagram = styled.div`\n\tbackground-color: white;\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 2rem;\n\tz-index: 10;\n\n\th2 {\n\t\tmargin-bottom: 2rem;\n\t\tfont-size: 2rem;\n\t\tcolor: hsl(217, 16%, 45%);\n\t\tgrid-area: a;\n\t}\n\timg {\n\t\tgrid-area: c;\n\t}\n\tbutton {\n\t\toutline: none;\n\t\tmargin-top: 4rem;\n\t\tcursor: pointer;\n\t\tcolor: #b5b9c9;\n\t\tbackground-color: transparent;\n\t\tborder: none;\n\t\tfont-size: 2rem;\n\t\tpadding: 1rem 2rem;\n\t\tgrid-area: b;\n\t}\n\n\t@media only screen and (min-width: 600px) {\n\t\tmargin: 10% auto;\n\t\ttop: -5%;\n\t\tdisplay: grid;\n\t\tgrid-template-areas:\n\t\t\t\"a b\"\n\t\t\t\"c c\";\n\t\twidth: 400px;\n\t\theight: 450px;\n\t\t/* border: 1px solid white; */\n\t\tborder-radius: 0.5rem;\n\t\th2 {\n\t\t\tmargin: 0;\n\t\t}\n\t\tbutton {\n\t\t\tpadding: 0.25rem;\n\t\t\tmargin: 0;\n\t\t\tjustify-self: end;\n\t\t}\n\t}\n`;\n\nexport default function Rules() {\n\tconst [showRules, setShowRules] = useState(false);\n\treturn (\n\t\t<div>\n\t\t\t{!showRules ? (\n\t\t\t\t<StyledRules>\n\t\t\t\t\t<button onClick={() => setShowRules(true)}>RULES</button>\n\t\t\t\t</StyledRules>\n\t\t\t) : (\n\t\t\t\t<StyledDiagram>\n\t\t\t\t\t<h2>RULES</h2>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc='./images/image-rules-bonus.svg'\n\t\t\t\t\t\talt='Here are the rules of the game.'\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={() => setShowRules(false)}>X</button>\n\t\t\t\t</StyledDiagram>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React, { useState, createContext } from \"react\";\nimport Scoreboard from \"./scoreboardView/Scoreboard\";\nimport GameDashboard from \"./gameView/GameDashboard\";\nimport styled from \"styled-components\";\nimport Rules from \"./Rules\";\n\nconst StyledApp = styled.div`\n\tbox-sizing: border-box;\n\tbackground: radial-gradient(hsl(214, 47%, 23%), hsl(237, 49%, 15%));\n\tmin-height: 100vh;\n`;\n\nconst StyledWrapper = styled.div`\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 85%;\n\tmax-width: 800px;\n`;\n\nexport const ScoreContext = createContext();\n\nexport default function App() {\n\tconst [score, setScore] = useState(0);\n\treturn (\n\t\t<ScoreContext.Provider\n\t\t\tvalue={{\n\t\t\t\tscore,\n\t\t\t\tsetScore,\n\t\t\t}}\n\t\t>\n\t\t\t<StyledApp>\n\t\t\t\t<StyledWrapper>\n\t\t\t\t\t<Scoreboard />\n\t\t\t\t\t<GameDashboard />\n\t\t\t\t</StyledWrapper>\n\t\t\t\t<Rules />\n\t\t\t</StyledApp>\n\t\t</ScoreContext.Provider>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}